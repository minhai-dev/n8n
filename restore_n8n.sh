#!/bin/bash

# C·∫•u h√¨nh
BUCKET="<t√™n bucket c·ªßa b·∫°n"   # üîÅ thay b·∫±ng t√™n bucket th·∫≠t
LOCAL_DIR="/home/ubuntu/backups"

mkdir -p "$LOCAL_DIR"

# T√¨m file SQL v√† Volume m·ªõi nh·∫•t tr√™n S3
LATEST_SQL=$(aws s3 ls s3://$BUCKET/ | grep 'n8n_db_.*\.sql' | sort | tail -n 1 | awk '{print $4}')
LATEST_VOL=$(aws s3 ls s3://$BUCKET/ | grep 'n8n_data_.*\.tar.gz' | sort | tail -n 1 | awk '{print $4}')

# T·∫£i v·ªÅ m√°y
echo "üì• T·∫£i file t·ª´ S3..."
aws s3 cp s3://$BUCKET/$LATEST_SQL $LOCAL_DIR/
aws s3 cp s3://$BUCKET/$LATEST_VOL $LOCAL_DIR/

# ƒê∆∞·ªùng d·∫´n local
SQL_FILE="$LOCAL_DIR/$LATEST_SQL"
VOL_FILE="$LOCAL_DIR/$LATEST_VOL"

echo "üõ† Kh√¥i ph·ª•c t·ª´:"
echo " - SQL   : $SQL_FILE"
echo " - Volume: $VOL_FILE"
read -p "‚ùì Ti·∫øp t·ª•c? (y/N): " CONFIRM
[[ "$CONFIRM" != "y" ]] && echo "‚ùå Hu·ª∑." && exit 1

# T·∫°o volume m·ªõi
docker volume create n8n_data

# Restore d·ªØ li·ªáu volume
docker run --rm \
  -v n8n_data:/data \
  -v $LOCAL_DIR:/backup \
  alpine tar xzf /backup/$(basename $VOL_FILE) -C /data

# Kh·ªüi ƒë·ªông PostgreSQL
docker compose up -d postgres
sleep 5

# Kh√¥i ph·ª•c PostgreSQL
cat $SQL_FILE | docker exec -i postgres psql -U n8n -d n8ndb

# Kh·ªüi ƒë·ªông to√†n b·ªô h·ªá th·ªëng
docker compose up -d

echo "‚úÖ ƒê√£ kh√¥i ph·ª•c xong!"

